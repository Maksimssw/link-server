version: '3.8'

services:
    db:
        container_name: postgres
        image: postgres:16
        restart: always
        environment:
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
            - POSTGRES_DATABASE=${POSTGRES_DATABASE}
        ports:
            - 5433:5432
        volumes:
            - postgres_data:/var/lib/postgresql/data
        networks:
            - stream-backend

    redis:
        container_name: redis
        image: redis:5.0
        restart: always
        ports:
            - 6379:6379
        command: redis-server
        volumes:
            - redis_data:/data
        networks:
            - stream-backend

    redisinsight:
        container_name: redisinsight
        image: redislabs/redisinsight:latest
        restart: always
        ports:
            - 9001:5540
        volumes:
            - redisinsight_data:/db
        environment:
            - REDISINSIGHT_HOST=0.0.0.0
            - REDISINSIGHT_PORT=8001
        networks:
            - stream-backend

    nestjs:
        container_name: nestjs
        build:
            context: .
            dockerfile: Dockerfile
        restart: always
        ports:
            - 4000:4000
        environment:
            - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DATABASE}
            - REDIS_HOST=redis
            - REDIS_PORT=6379
        depends_on:
            - db
            - redis
        networks:
            - stream-backend

volumes:
    postgres_data:
    redis_data:
    redisinsight_data:

networks:
    stream-backend: